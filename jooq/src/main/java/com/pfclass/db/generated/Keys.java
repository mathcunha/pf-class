/*
 * This file is generated by jOOQ.
 */
package com.pfclass.db.generated;


import com.pfclass.db.generated.tables.Owners;
import com.pfclass.db.generated.tables.Pets;
import com.pfclass.db.generated.tables.Specialties;
import com.pfclass.db.generated.tables.Types;
import com.pfclass.db.generated.tables.VetSpecialties;
import com.pfclass.db.generated.tables.Vets;
import com.pfclass.db.generated.tables.Visits;
import com.pfclass.db.generated.tables.records.OwnersRecord;
import com.pfclass.db.generated.tables.records.PetsRecord;
import com.pfclass.db.generated.tables.records.SpecialtiesRecord;
import com.pfclass.db.generated.tables.records.TypesRecord;
import com.pfclass.db.generated.tables.records.VetSpecialtiesRecord;
import com.pfclass.db.generated.tables.records.VetsRecord;
import com.pfclass.db.generated.tables.records.VisitsRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>petclinic</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<OwnersRecord> KEY_OWNERS_PRIMARY = UniqueKeys0.KEY_OWNERS_PRIMARY;
    public static final UniqueKey<PetsRecord> KEY_PETS_PRIMARY = UniqueKeys0.KEY_PETS_PRIMARY;
    public static final UniqueKey<SpecialtiesRecord> KEY_SPECIALTIES_PRIMARY = UniqueKeys0.KEY_SPECIALTIES_PRIMARY;
    public static final UniqueKey<TypesRecord> KEY_TYPES_PRIMARY = UniqueKeys0.KEY_TYPES_PRIMARY;
    public static final UniqueKey<VetSpecialtiesRecord> KEY_VET_SPECIALTIES_VET_ID = UniqueKeys0.KEY_VET_SPECIALTIES_VET_ID;
    public static final UniqueKey<VetsRecord> KEY_VETS_PRIMARY = UniqueKeys0.KEY_VETS_PRIMARY;
    public static final UniqueKey<VisitsRecord> KEY_VISITS_PRIMARY = UniqueKeys0.KEY_VISITS_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<PetsRecord, TypesRecord> PETS_IBFK_2 = ForeignKeys0.PETS_IBFK_2;
    public static final ForeignKey<PetsRecord, OwnersRecord> PETS_IBFK_1 = ForeignKeys0.PETS_IBFK_1;
    public static final ForeignKey<VetSpecialtiesRecord, VetsRecord> VET_SPECIALTIES_IBFK_1 = ForeignKeys0.VET_SPECIALTIES_IBFK_1;
    public static final ForeignKey<VetSpecialtiesRecord, SpecialtiesRecord> VET_SPECIALTIES_IBFK_2 = ForeignKeys0.VET_SPECIALTIES_IBFK_2;
    public static final ForeignKey<VisitsRecord, PetsRecord> VISITS_IBFK_1 = ForeignKeys0.VISITS_IBFK_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<OwnersRecord> KEY_OWNERS_PRIMARY = Internal.createUniqueKey(Owners.OWNERS, "KEY_owners_PRIMARY", Owners.OWNERS.ID);
        public static final UniqueKey<PetsRecord> KEY_PETS_PRIMARY = Internal.createUniqueKey(Pets.PETS, "KEY_pets_PRIMARY", Pets.PETS.ID);
        public static final UniqueKey<SpecialtiesRecord> KEY_SPECIALTIES_PRIMARY = Internal.createUniqueKey(Specialties.SPECIALTIES, "KEY_specialties_PRIMARY", Specialties.SPECIALTIES.ID);
        public static final UniqueKey<TypesRecord> KEY_TYPES_PRIMARY = Internal.createUniqueKey(Types.TYPES, "KEY_types_PRIMARY", Types.TYPES.ID);
        public static final UniqueKey<VetSpecialtiesRecord> KEY_VET_SPECIALTIES_VET_ID = Internal.createUniqueKey(VetSpecialties.VET_SPECIALTIES, "KEY_vet_specialties_vet_id", VetSpecialties.VET_SPECIALTIES.VET_ID, VetSpecialties.VET_SPECIALTIES.SPECIALTY_ID);
        public static final UniqueKey<VetsRecord> KEY_VETS_PRIMARY = Internal.createUniqueKey(Vets.VETS, "KEY_vets_PRIMARY", Vets.VETS.ID);
        public static final UniqueKey<VisitsRecord> KEY_VISITS_PRIMARY = Internal.createUniqueKey(Visits.VISITS, "KEY_visits_PRIMARY", Visits.VISITS.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<PetsRecord, TypesRecord> PETS_IBFK_2 = Internal.createForeignKey(com.pfclass.db.generated.Keys.KEY_TYPES_PRIMARY, Pets.PETS, "pets_ibfk_2", Pets.PETS.TYPE_ID);
        public static final ForeignKey<PetsRecord, OwnersRecord> PETS_IBFK_1 = Internal.createForeignKey(com.pfclass.db.generated.Keys.KEY_OWNERS_PRIMARY, Pets.PETS, "pets_ibfk_1", Pets.PETS.OWNER_ID);
        public static final ForeignKey<VetSpecialtiesRecord, VetsRecord> VET_SPECIALTIES_IBFK_1 = Internal.createForeignKey(com.pfclass.db.generated.Keys.KEY_VETS_PRIMARY, VetSpecialties.VET_SPECIALTIES, "vet_specialties_ibfk_1", VetSpecialties.VET_SPECIALTIES.VET_ID);
        public static final ForeignKey<VetSpecialtiesRecord, SpecialtiesRecord> VET_SPECIALTIES_IBFK_2 = Internal.createForeignKey(com.pfclass.db.generated.Keys.KEY_SPECIALTIES_PRIMARY, VetSpecialties.VET_SPECIALTIES, "vet_specialties_ibfk_2", VetSpecialties.VET_SPECIALTIES.SPECIALTY_ID);
        public static final ForeignKey<VisitsRecord, PetsRecord> VISITS_IBFK_1 = Internal.createForeignKey(com.pfclass.db.generated.Keys.KEY_PETS_PRIMARY, Visits.VISITS, "visits_ibfk_1", Visits.VISITS.PET_ID);
    }
}
