/*
 * This file is generated by jOOQ.
 */
package com.pfclass.db.generated.tables.daos;


import com.pfclass.db.generated.tables.Types;
import com.pfclass.db.generated.tables.records.TypesRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TypesDao extends DAOImpl<TypesRecord, com.pfclass.db.generated.tables.pojos.Types, Integer> {

    /**
     * Create a new TypesDao without any configuration
     */
    public TypesDao() {
        super(Types.TYPES, com.pfclass.db.generated.tables.pojos.Types.class);
    }

    /**
     * Create a new TypesDao with an attached configuration
     */
    public TypesDao(Configuration configuration) {
        super(Types.TYPES, com.pfclass.db.generated.tables.pojos.Types.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.pfclass.db.generated.tables.pojos.Types object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.pfclass.db.generated.tables.pojos.Types> fetchById(Integer... values) {
        return fetch(Types.TYPES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.pfclass.db.generated.tables.pojos.Types fetchOneById(Integer value) {
        return fetchOne(Types.TYPES.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.pfclass.db.generated.tables.pojos.Types> fetchByName(String... values) {
        return fetch(Types.TYPES.NAME, values);
    }
}
